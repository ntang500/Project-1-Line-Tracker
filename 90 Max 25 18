#pragma config(StandardModel, "EV3_REMBOT")
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

task robotStop(){
	setMotorSpeed(motorB, 0);
	setMotorSpeed(motorC, 0);

}
task robotForward(){
	setMotorSpeed(motorB, 30);
	setMotorSpeed(motorC, 30);
}
task robotBeep(){
	playSound(soundUpwardTones);

}
task robotRightTurn(){
		setMotorSpeed(motorB, 30);
		setMotorSpeed(motorC, -30);
}
task robotLeftTurn(){
		setMotorSpeed(motorB, -30);
		setMotorSpeed(motorC, 30);

}
task robotRightTurn2(){
		setMotorSpeed(motorB, 30);
		setMotorSpeed(motorC, -20);
}



task main(){
	//store line colour (blue = 1, green = 3, white = 6)
	int lineColourValue;
	
	//run program until stopped by user
	while(1)
	{
		//robot will start moving slightly to the right until it detects white (if coloursensor != 6)
		while(SensorValue(S3)!= 6 )
		{
			lineColourValue = SensorValue(S3);
			setMotorSpeed(motorB, 25);
			setMotorSpeed(motorC, 18);
			//stop code if Distance from obstacle < 10cm
				if (SensorValue(S4) < 11.5)
				{
				//if green, run green program (while loop)
				//if(SensorValue(S3) == 3)
				//if loop if distance < 10cm, robot will turn 180 and continue movement to start of track
					if(lineColourValue == 3)
					{
						//Stop robot, beeps for 2 seconds before -
						startTask(robotStop);
						startTask(robotBeep);
						wait1Msec(2000);
						stopTask(robotBeep);
						stopTask(robotStop);
						startTask(robotLeftTurn);
						wait1Msec(800);
						stopTask(robotLeftTurn);
						}
						//if blue, run blue program (while loop)
						if(lineColourValue == 1)
						{
							//Stop robot, beeps for 2 seconds before -
							startTask(robotStop);
							startTask(robotBeep);
							wait1Msec(2000);
							stopTask(robotBeep);
							stopTask(robotStop);

							//move forward, turn 90 degrees right, turn 90 degrees left, continue movement
							startTask(robotForward);
							wait1Msec(500);
							stopTask(robotForward);

							startTask(robotRightTurn);
							wait1Msec(600);
							stopTask(robotRightTurn);

							startTask(robotLeftTurn);
							wait1Msec(400);
							stopTask(robotLeftTurn);
						}
					}

		}
		while(SensorValue(S3) == 6)
		{

				clearTimer(T1);
				//while colour is white AND time < 405ms, turn left
				while (time1[T1] < 405 && SensorValue(S3) == 6)
				{
					startTask(robotLeftTurn);
					if (SensorValue(S4) < 11.5)
				{
				//if green, run green program (while loop)
				//if(SensorValue(S3) == 3)
				//if loop if distance < 10cm, robot will turn 180 and continue movement to start of track
					if(lineColourValue == 3)
					{
						//Stop robot, beeps for 2 seconds before -
						startTask(robotStop);
						startTask(robotBeep);
						wait1Msec(2000);
						stopTask(robotBeep);
						stopTask(robotStop);
						startTask(robotLeftTurn);
						wait1Msec(800);
						stopTask(robotLeftTurn);
						}
						//if blue, run blue program (while loop)
						if(lineColourValue == 1)
						{
							//Stop robot, beeps for 2 seconds before -
							startTask(robotStop);
							startTask(robotBeep);
							wait1Msec(2000);
							stopTask(robotBeep);
							stopTask(robotStop);

							//move forward, turn 90 degrees right, turn 90 degrees left, continue movement
							startTask(robotForward);
							wait1Msec(500);
							stopTask(robotForward);

							startTask(robotRightTurn);
							wait1Msec(600);
							stopTask(robotRightTurn);

							startTask(robotLeftTurn);
							wait1Msec(400);
							stopTask(robotLeftTurn);
						}
					}
				}
				while (SensorValue(S3) == 6)
				{
					//once previous while loop runs out (timer && color = white), turn right until color != white
					wait1Msec(100);
					stopTask(robotLeftTurn);
					startTask(robotRightTurn2);

				}

				stopTask(robotRightTurn2);
		}

	}
}
